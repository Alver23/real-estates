{"version":3,"sources":["commons/app/index.ts","components/notification-bar/index.tsx","components/navbar/menu-config.ts","components/navbar/index.tsx","assets/images/logo-desktop.svg","assets/images/logo-mobile.svg","components/header/index.tsx","components/footer/index.tsx","components/layout/index.tsx","components/card/index.tsx","containers/favorites-list/components/favority-new-list/index.tsx","components/card-image/index.tsx","components/card-images/index.tsx","containers/favorites-list/components/favority-detail/index.tsx","hooks/use-fetch/reducer/index.ts","hooks/use-fetch/index.ts","services/real-estates/commons/index.ts","services/real-estates/index.ts","containers/favorites-list/hooks/index.ts","containers/favorites-list/index.tsx","pages/home/index.tsx","routes/index.tsx","containers/app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["STATUS_TYPES","NotificationBar","className","menuItems","id","name","url","Navbar","map","to","size","Header","React","useState","isOpen","setIsOpen","type","onClick","src","logoDesktop","alt","title","logoMobile","Footer","Date","getFullYear","LayoutApp","children","Card","containerStyle","FavorityNewList","CardImage","image","CardImages","images","newImages","slice","imagesCopy","splice","length","index","FavorityDetail","message","CONSTANTS","initialState","data","undefined","status","IDLE","errors","fetchReducer","state","action","SET_DATA","payload","SUCCEEDED","SET_LOADING","SET_ERROR","FAILED","SET_RESET","useFetch","callback","dependencies","initialValues","values","useReducer","dispatch","isMounted","useRef","useEffect","current","resetState","useCallback","memoizeCallback","params","a","fetcher","LOADING","then","response","catch","error","dataMapper","item","attributes","realEstateIds","includedMapper","newData","forEach","included","estates","Promise","resolve","mapperList","realEstatesMock","useGetRealEstates","RealEstatesService","getList","useMemo","estateDetailImages","realEstateId","galleryUrls","toString","filter","FavoritesList","realEstates","HomePage","AppRouter","basename","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33d054fa.chunk.js","sourcesContent":["export enum STATUS_TYPES {\n  IDLE = 'idle',\n  SUCCEEDED = 'succeeded',\n  LOADING = 'loading',\n  FAILED = 'failed',\n}\n\nexport default STATUS_TYPES;\n","// Dependencies\nimport { ReactElement } from 'react';\n\nconst NotificationBar = (): ReactElement => {\n  return <div className=\"bg-green-300 w-3 h-3 rounded-full\" />;\n};\n\nexport default NotificationBar;\n","const menuItems = [\n  {\n    id: 1,\n    name: 'Cundinamarca',\n    url: '/',\n  },\n  {\n    id: 2,\n    name: 'Antioquia',\n    url: '/',\n  },\n  {\n    id: 3,\n    name: 'Recursos',\n    url: '/',\n  },\n];\n\nexport default menuItems;\n","// Dependencies\nimport { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\n\n// Components\nimport NotificationBar from '@alversoft/components/notification-bar';\n\nimport menuItems from './menu-config';\n\nconst Navbar = (): ReactElement => {\n  return (\n    <nav className=\"md:top-0 z-20 | w-full md:w-auto | bg-green-300 md:bg-white\">\n      <ul className=\"flex md:flex flex-col md:flex-row | md:space-x-6 text-white md:text-primary\">\n        {menuItems.map(({ id, name, url }) => (\n          <li key={id} className=\"px-4 py-2 md:p-0 | border-b md:border-0\">\n            <Link to={url}>{name}</Link>\n          </li>\n        ))}\n        <li className=\"px-4 py-2 md:p-0\">\n          <Link to=\"/\" className=\"flex flex-row items-center relative\">\n            <span className=\"pr-2\">Perfil</span>\n            <MdKeyboardArrowDown className=\"hidden md:block\" size={24} />\n            <div className=\"absolute hidden md:block top-0.5 right-0\">\n              <NotificationBar />\n            </div>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo-desktop.fa93536c.svg\";","export default __webpack_public_path__ + \"static/media/logo-mobile.a5ddcc1b.svg\";","// Dependencies\nimport React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { VscMenu } from 'react-icons/vsc';\n\n// Components\nimport Navbar from '@alversoft/components/navbar';\nimport NotificationBar from '@alversoft/components/notification-bar';\n\n// Assets\nimport logoDesktop from '@alversoft/assets/images/logo-desktop.svg';\nimport logoMobile from '@alversoft/assets/images/logo-mobile.svg';\n\nconst Header = (): ReactElement => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <header className=\"flex flex-row justify-between items-center md:px-20 w-full h-14 | border-b border-green-100\">\n      <div className=\"flex flex-row items-end\">\n        <button type=\"button\" className=\"relative md:hidden px-4\" onClick={() => setIsOpen(!isOpen)}>\n          <VscMenu className=\"text-green-400\" size={30} />\n          <div className=\"absolute top-0 right-2\">\n            <NotificationBar />\n          </div>\n        </button>\n        <Link to=\"/\" className=\"block\">\n          <img className=\"hidden md:block text-green-800\" src={logoDesktop} alt=\"La Haus\" title=\"La Haus Logo\" />\n          <img className=\"md:hidden text-green-800\" src={logoMobile} alt=\"La Haus\" title=\"La Haus Logo\" />\n        </Link>\n      </div>\n      <div className=\"hidden md:block\">\n        <Navbar />\n      </div>\n      <div className=\"md:hidden absolute w-full top-14 z-50\">{isOpen && <Navbar />}</div>\n    </header>\n  );\n};\n\nexport default Header;\n","// Dependencies\nimport { ReactElement } from 'react';\n\nconst Footer = (): ReactElement => {\n  return (\n    <footer className=\"w-full flex justify-center items-center h-14 bg-green-300\">\n      <p className=\"text-white text-center text-sm\">Copyright © {new Date().getFullYear()} All Rights.</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// Dependencies\nimport { FC, ReactElement } from 'react';\n\n// Components\nimport Header from '@alversoft/components/header';\nimport Footer from '@alversoft/components/footer';\n\n// Interfaces\nimport ILayoutProps from './interfaces';\n\n// Styles\nimport './scss/index.scss';\n\nconst LayoutApp: FC<ILayoutProps> = ({ children }: ILayoutProps): ReactElement => {\n  return (\n    <div className=\"layout-container bg-white\">\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default LayoutApp;\n","// Dependencies\nimport { ReactElement, FC } from 'react';\n\n// Interfaces\nimport ICardProps from './interfaces';\n\nconst Card: FC<ICardProps> = ({ children, containerStyle = '' }: ICardProps): ReactElement => {\n  return <div className={`rounded-lg${containerStyle}`}>{children}</div>;\n};\n\nexport default Card;\n","// Dependencies\nimport { ReactElement } from 'react';\nimport { VscAdd } from 'react-icons/vsc';\n\n// Components\nimport Card from '@alversoft/components/card';\n\nconst FavorityNewList = (): ReactElement => (\n  <>\n    <Card containerStyle=\" bg-blue-100 h-full text-blue-400 flex justify-center items-center\">\n      <VscAdd size={44} className=\"text-blue-400\" />\n    </Card>\n    <div className=\"flex flex-col justify-center items-center mt-4\">\n      <span className=\"text-lg text-blue-400 font-medium\">Crear una nueva lista</span>\n    </div>\n  </>\n);\n\nexport default FavorityNewList;\n","// Dependencies\nimport { ReactElement, FC } from 'react';\n\n// Components\nimport Card from '@alversoft/components/card';\n\n// Interfaces\nimport ICardImageProps from './interfaces';\n\nconst CardImage: FC<ICardImageProps> = ({ image, alt }: ICardImageProps): ReactElement => {\n  return (\n    <Card>\n      <img src={image} alt={alt} className=\"w-full border border-white | object-cover | rounded-lg\" />\n    </Card>\n  );\n};\n\nexport default CardImage;\n","// Dependencies\nimport { FC } from 'react';\n\n// Components\nimport CardImage from '@alversoft/components/card-image';\n\n// Interfaces\nimport ICardImagesProps from '@alversoft/components/card-images/interfaces';\n\n// Styles\nimport './scss/index.scss';\n\nconst CardImages: FC<ICardImagesProps> = ({ images }: ICardImagesProps) => {\n  const newImages = images.slice(0, 3);\n  const imagesCopy = [...images];\n  imagesCopy.splice(0, 2);\n  let containerStyle = `card-images-container--content-${images.length}`;\n  if (images.length >= 3) {\n    containerStyle = 'card-images-container--content-3';\n  }\n  return (\n    <div className={`card-images-container ${containerStyle}`}>\n      {newImages.map(({ id, image, alt }, index) => {\n        const className = `image-container-${index + 1}`;\n        return (\n          <div key={id} className={className}>\n            <CardImage image={image} alt={alt} />\n          </div>\n        );\n      })}\n      {imagesCopy.length > 0 && (\n        <div className=\"absolute | right-4 | z-50 | h-full | flex items-center | font-semibold | text-white text-lg\">\n          <span>+ {imagesCopy.length}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CardImages;\n","// Dependencies\nimport { ReactElement, FC } from 'react';\n\n// Components\nimport CardImages from '@alversoft/components/card-images';\n\n// Interfaces\nimport IFavorityDetailProps from './interfaces';\n\nconst FavorityDetail: FC<IFavorityDetailProps> = ({ images, name }: IFavorityDetailProps): ReactElement => {\n  let message = 'propiedades guardadas';\n  if (images.length === 1) {\n    message = 'propiedad guardada';\n  }\n  return (\n    <>\n      <CardImages images={images} />\n      <div className=\"mt-4 flex flex-col\">\n        <span className=\"text-lg text-primary font-semibold\">{name}</span>\n        <span className=\"text-green-400 mt-2\">\n          {images.length} {message}\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default FavorityDetail;\n","// Commons\nimport { STATUS_TYPES } from '@alversoft/commons/app';\n\nexport enum CONSTANTS {\n  SET_LOADING = 'SET_LOADING',\n  SET_DATA = 'SET_DATA',\n  SET_ERROR = 'SET_ERROR',\n  SET_RESET = 'SET_RESET',\n}\n\nexport type IState = {\n  status: STATUS_TYPES;\n  data: any;\n  errors: Error | any;\n};\n\ntype IAction = {\n  type: CONSTANTS;\n  payload?: any;\n};\n\nexport const initialState: IState = {\n  data: undefined,\n  status: STATUS_TYPES.IDLE,\n  errors: undefined,\n};\n\nexport const fetchReducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case CONSTANTS.SET_DATA:\n      return {\n        data: action.payload,\n        errors: undefined,\n        status: STATUS_TYPES.SUCCEEDED,\n      };\n    case CONSTANTS.SET_LOADING:\n      return { ...state, status: action.payload };\n    case CONSTANTS.SET_ERROR:\n      return { ...state, errors: action.payload, status: STATUS_TYPES.FAILED };\n    case CONSTANTS.SET_RESET:\n      return { ...state, ...initialState };\n    default:\n      return state;\n  }\n};\n","// Dependencies\nimport React from 'react';\n\n// Commons\nimport { STATUS_TYPES } from '@alversoft/commons/app';\n\n// Reducers\nimport { fetchReducer, initialState, CONSTANTS, IState } from './reducer';\n\nexport const useFetch = (\n  callback: any,\n  dependencies: Array<any>,\n  initialValues: any = {}\n): [IState, () => void, () => void] => {\n  const values = {\n    ...initialState,\n    ...initialValues,\n  };\n\n  const [state, dispatch] = React.useReducer(fetchReducer, values);\n\n  const isMounted = React.useRef(true);\n\n  React.useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  const resetState = React.useCallback(() => {\n    dispatch({ type: CONSTANTS.SET_RESET });\n  }, []);\n\n  const memoizeCallback = React.useCallback(async (params) => {\n    return (await callback)(params);\n  }, dependencies);\n\n  const fetcher = React.useCallback(\n    (params = {}) => {\n      dispatch({ type: CONSTANTS.SET_LOADING, payload: STATUS_TYPES.LOADING });\n      memoizeCallback(params)\n        .then((response) => {\n          if (isMounted.current) {\n            dispatch({ type: CONSTANTS.SET_DATA, payload: response });\n          }\n        })\n        .catch((error) => {\n          dispatch({ type: CONSTANTS.SET_ERROR, payload: error });\n        });\n    },\n    [memoizeCallback]\n  );\n\n  React.useEffect(fetcher, dependencies);\n\n  return [state, fetcher, resetState];\n};\n\nexport default useFetch;\n","// Interfaces\nimport { IRealEstateData, IRealEstateIncluded } from '@alversoft/interfaces/real-estates';\nimport { IRealEstatesGroup, IRealEstateDetail } from '@alversoft/services/real-estates/interfaces/api';\n\nexport const dataMapper = (data: IRealEstatesGroup[]): IRealEstateData[] => {\n  return data.map((item) => {\n    const { id, attributes } = item;\n    const { name, realEstateIds } = attributes;\n    return {\n      id,\n      name,\n      realEstateIds,\n    };\n  });\n};\n\nexport const includedMapper = (data: IRealEstateDetail[]): IRealEstateIncluded => {\n  const newData: any = {};\n  data.forEach((item) => {\n    const { id, attributes } = item;\n    newData[id] = attributes;\n  });\n\n  return newData;\n};\n","// Interfaces\nimport { IRealEstates } from '@alversoft/interfaces/real-estates';\nimport { IRealEstateApiResponse } from '@alversoft/services/real-estates/interfaces/api';\n\n// Commons\nimport { dataMapper, includedMapper } from '@alversoft/services/real-estates/commons';\n\n// Mocks\nimport realEstatesMock from './__mocks__/real_estates.json';\n\nclass RealEstatesService {\n  private mapperList(response: IRealEstateApiResponse): IRealEstates {\n    const { data, included } = response;\n    return {\n      estates: dataMapper(data),\n      included: includedMapper(included),\n    };\n  }\n\n  public async getList(): Promise<IRealEstates> {\n    return new Promise((resolve) => {\n      resolve(this.mapperList(realEstatesMock as any));\n    });\n  }\n}\n\nexport default new RealEstatesService();\n","// Dependencies\nimport { useMemo } from 'react';\n\n// Hooks\nimport { useFetch } from '@alversoft/hooks/use-fetch';\n\n// Services\nimport RealEstatesService from '@alversoft/services/real-estates';\n\n// Interfaces\nimport { IRealEstateData } from '@alversoft/interfaces/real-estates';\n\nexport const useGetRealEstates = () => {\n  const getList = () => {\n    return RealEstatesService.getList();\n  };\n\n  const initialState = {\n    data: {\n      estates: [],\n      included: undefined,\n    },\n  };\n  const [state] = useFetch(getList, [], initialState);\n  const {\n    status,\n    data: { estates, included },\n  } = state;\n\n  const newEstates = useMemo(() => {\n    return estates.map((item: IRealEstateData) => {\n      const { realEstateIds } = item;\n      const estateDetailImages = realEstateIds\n        .map((realEstateId) => {\n          const { galleryUrls, name } = included[realEstateId] || { galleryUrls: [] };\n          if (galleryUrls && galleryUrls.length > 0) {\n            return {\n              id: realEstateId.toString(),\n              image: galleryUrls[0],\n              alt: name,\n            };\n          }\n          return undefined;\n        })\n        .filter((item) => !!item);\n      return {\n        ...item,\n        images: estateDetailImages,\n      };\n    });\n  }, [estates, included]);\n\n  return [status, newEstates];\n};\n\nexport default useGetRealEstates;\n","// Dependencies\nimport { ReactElement } from 'react';\n\n// Components\nimport FavorityNewList from './components/favority-new-list';\nimport FavorityDetail from './components/favority-detail';\n\n// Hooks\nimport { useGetRealEstates } from './hooks';\n\n// Styles\nimport './scss/index.scss';\n\nconst FavoritesList = (): ReactElement => {\n  const [, realEstates] = useGetRealEstates();\n\n  return (\n    <div className=\"favority-container\">\n      {realEstates.map(({ id, name, images }: any) => (\n        <div className=\"favority-container--card-container\" key={id}>\n          <FavorityDetail images={images} name={name} />\n        </div>\n      ))}\n      <div className=\"favority-container--new-item\">\n        <FavorityNewList />\n      </div>\n    </div>\n  );\n};\n\nexport default FavoritesList;\n","// Dependencies\nimport { ReactElement } from 'react';\n\n// Components\nimport Layout from '@alversoft/components/layout';\n\n// Containers\nimport FavoritesList from '@alversoft/containers/favorites-list';\n\nconst HomePage = (): ReactElement => {\n  return (\n    <Layout>\n      <div className=\"m-auto container pt-8 md:pt-14\">\n        <h1 className=\"font-semibold text-center text-primary text-2xl md:text-3xl mb-4 md:mb-0\">\n          Listas de favoritos\n        </h1>\n        <FavoritesList />\n      </div>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","// Dependencies\nimport { ReactElement } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Pages\nimport HomePage from '@alversoft/pages/home';\n\nconst AppRouter = (): ReactElement => {\n  return (\n    <Router basename=\"/real-estates\">\n      <Switch>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// Dependencies\nimport { ReactElement } from 'react';\n\n// Router\nimport AppRouter from '@alversoft/routes';\n\nconst App = (): ReactElement => {\n  return <AppRouter />;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Dependencies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Containers\nimport App from '@alversoft/containers/app';\nimport reportWebVitals from '@alversoft/reportWebVitals';\n\n// Styles App\nimport '@alversoft/assets/scss/app.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}