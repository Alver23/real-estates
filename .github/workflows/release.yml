name: CD

on:
  push:
    branches: [ main ]


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_SONARQUBE_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}
          envkey_SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          envkey_AUTHOR_FIRST_NAME: "Alver Alexander"
          envkey_AUTHOR_LAST_NAME: "Grisales Ortega"
          file_name: .env
      - name: Install NPM packages
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Run tests
        run: npm run test
      - name: Build project
        run: npm run build
      - name: Run Coveralls
        run: npm run coveralls
      - name: Run Sonarqube
        run: npm run sonarqube
      - name: Upload production-ready build files
        uses: actions/upload-artifact@v2
        with:
          name: production-files
          path: ./build

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: production-files
          path: ./build
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

  release:
    name: Release
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # gives standard-version access to all previous commits
      - name: generate tag and release body
        run: |
          git config user.name Alver Grisales
          git config user.email viga.23@hotmail.com
          npm ci && npm run release
      - name: publish tag
        id: publish_tag
        run: |
          git push --follow-tags
          echo ::set-output name=tag_name::$(git describe HEAD --abbrev=0)
      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
          tag_name: ${{ steps.publish_tag.outputs.tag_name }}
          body_path: CHANGELOG.md
